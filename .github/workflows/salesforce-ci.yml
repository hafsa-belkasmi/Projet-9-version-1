name: Salesforce CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Salesforce CLI
        run: |
          npm install --global sfdx-cli
          sfdx --version

      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.SF_AUTH_URL }}" > auth.txt
          sfdx force:auth:sfdxurl:store -f auth.txt --setdefaultusername --setalias ciOrg
          rm -f auth.txt
          sfdx force:org:list

      - name: Run Apex tests (JUnit + coverage)
        run: |
          mkdir -p tests/apex
          sfdx force:apex:test:run -c -r junit -d ./tests/apex --codecoverage -w 20 -u ciOrg

      # ðŸ”Ž Debug (optionnel mais trÃ¨s utile pour vÃ©rifier le contenu)
      - name: List metadata (debug)
        run: |
          echo "== package.xml ==" && cat manifest/package.xml || true
          echo "== default content ==" && ls -la force-app/main/default || true

      # âœ… Validation (checkonly) via package.xml â€” uniquement sur Pull Requests
      - name: Validate deploy (checkonly on PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          sfdx force:source:deploy -x manifest/package.xml -l RunLocalTests --checkonly -u ciOrg

      # ðŸš€ DÃ©ploiement rÃ©el via package.xml â€” uniquement sur push vers main
      - name: Real deploy on push to main
        if: ${{ github.event_name == 'push' }}
        run: |
          sfdx force:source:deploy -x manifest/package.xml -l RunLocalTests -u ciOrg

      # ðŸ“¦ Artefacts de tests (toujours uploadÃ©s, mÃªme en cas d'Ã©chec)
      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: apex-junit
          path: tests/apex
